;buildInfoPackage: chisel3, version: 3.1.8, scalaVersion: 2.11.12, sbtVersion: 1.1.1, builtAtString: 2019-07-08 17:44:42.884, builtAtMillis: 1562607882884
circuit ID_EX_Reg : 
  module ID_EX_Reg : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip pc_in : UInt<10>, pc_out : UInt<32>, flip pc4_in : UInt<10>, pc4_out : UInt<32>, flip MemWrite_in : UInt<1>, flip Branch_in : UInt<1>, flip MemRead_in : UInt<1>, flip RegWrite_in : UInt<1>, flip MemtoReg_in : UInt<1>, flip AluOp_in : UInt<3>, flip OpA_in : UInt<2>, flip OpB_in : UInt<1>, flip NextPc_in : UInt<2>, MemWrite_out : UInt<1>, Branch_out : UInt<1>, MemRead_out : UInt<1>, RegWrite_out : UInt<1>, MemtoReg_out : UInt<1>, AluOp_out : UInt<3>, OpA_out : UInt<2>, OpB_out : UInt<1>, NextPc_out : UInt<2>, flip imm_in : SInt<32>, imm_out : SInt<32>, flip func3_in : UInt<3>, flip func7_in : UInt<1>, func3_out : UInt<3>, func7_out : UInt<1>, flip rs1_in : SInt<32>, flip rs2_in : SInt<32>, rs1_out : SInt<32>, rs2_out : SInt<32>, flip rs1_s_in : SInt<5>, flip rs2_s_in : SInt<5>, rs1_s_out : SInt<5>, rs2_s_out : SInt<5>, flip rd_in : SInt<5>, rd_out : SInt<5>}
    
    reg pcreg : UInt, clock @[ID_EX_Reg.scala 54:28]
    pcreg <= UInt<32>("h00") @[ID_EX_Reg.scala 54:28]
    reg pc4reg : UInt, clock @[ID_EX_Reg.scala 55:29]
    pc4reg <= UInt<32>("h00") @[ID_EX_Reg.scala 55:29]
    reg instreg : UInt, clock @[ID_EX_Reg.scala 56:30]
    instreg <= UInt<32>("h00") @[ID_EX_Reg.scala 56:30]
    pcreg <= io.pc_in @[ID_EX_Reg.scala 57:15]
    io.pc_out <= pcreg @[ID_EX_Reg.scala 58:19]
    pc4reg <= io.pc4_in @[ID_EX_Reg.scala 59:16]
    io.pc4_out <= pc4reg @[ID_EX_Reg.scala 60:20]
    reg immreg : SInt, clock @[ID_EX_Reg.scala 62:29]
    immreg <= asSInt(UInt<32>("h00")) @[ID_EX_Reg.scala 62:29]
    immreg <= io.imm_in @[ID_EX_Reg.scala 63:16]
    io.imm_out <= immreg @[ID_EX_Reg.scala 64:20]
    reg func3reg : UInt, clock @[ID_EX_Reg.scala 66:31]
    func3reg <= UInt<3>("h00") @[ID_EX_Reg.scala 66:31]
    func3reg <= io.func3_in @[ID_EX_Reg.scala 67:18]
    io.func3_out <= func3reg @[ID_EX_Reg.scala 68:22]
    reg func7reg : UInt, clock @[ID_EX_Reg.scala 69:31]
    func7reg <= UInt<1>("h00") @[ID_EX_Reg.scala 69:31]
    func7reg <= io.func7_in @[ID_EX_Reg.scala 70:18]
    io.func7_out <= func7reg @[ID_EX_Reg.scala 71:22]
    reg rs1reg : SInt, clock @[ID_EX_Reg.scala 73:29]
    rs1reg <= asSInt(UInt<32>("h00")) @[ID_EX_Reg.scala 73:29]
    rs1reg <= io.rs1_in @[ID_EX_Reg.scala 74:16]
    io.rs1_out <= rs1reg @[ID_EX_Reg.scala 75:20]
    reg rs2reg : SInt, clock @[ID_EX_Reg.scala 76:29]
    rs2reg <= asSInt(UInt<32>("h00")) @[ID_EX_Reg.scala 76:29]
    rs2reg <= io.rs2_in @[ID_EX_Reg.scala 77:16]
    io.rs2_out <= rs2reg @[ID_EX_Reg.scala 78:20]
    reg rs1sreg : SInt, clock @[ID_EX_Reg.scala 79:30]
    rs1sreg <= asSInt(UInt<5>("h00")) @[ID_EX_Reg.scala 79:30]
    rs1sreg <= io.rs1_s_in @[ID_EX_Reg.scala 80:17]
    io.rs1_s_out <= rs1sreg @[ID_EX_Reg.scala 81:22]
    reg rs2sreg : SInt, clock @[ID_EX_Reg.scala 82:30]
    rs2sreg <= asSInt(UInt<5>("h00")) @[ID_EX_Reg.scala 82:30]
    rs2sreg <= io.rs2_s_in @[ID_EX_Reg.scala 83:17]
    io.rs2_s_out <= rs2sreg @[ID_EX_Reg.scala 84:22]
    reg rdreg : SInt, clock @[ID_EX_Reg.scala 85:28]
    rdreg <= asSInt(UInt<5>("h00")) @[ID_EX_Reg.scala 85:28]
    rdreg <= io.rd_in @[ID_EX_Reg.scala 86:15]
    io.rd_out <= rdreg @[ID_EX_Reg.scala 87:19]
    reg MemWritereg : UInt, clock @[ID_EX_Reg.scala 89:34]
    MemWritereg <= UInt<1>("h00") @[ID_EX_Reg.scala 89:34]
    reg Branchreg : UInt, clock @[ID_EX_Reg.scala 90:32]
    Branchreg <= UInt<1>("h00") @[ID_EX_Reg.scala 90:32]
    reg MemReadreg : UInt, clock @[ID_EX_Reg.scala 91:33]
    MemReadreg <= UInt<1>("h00") @[ID_EX_Reg.scala 91:33]
    reg RegWritereg : UInt, clock @[ID_EX_Reg.scala 92:34]
    RegWritereg <= UInt<1>("h00") @[ID_EX_Reg.scala 92:34]
    reg MemtoRegreg : UInt, clock @[ID_EX_Reg.scala 93:34]
    MemtoRegreg <= UInt<1>("h00") @[ID_EX_Reg.scala 93:34]
    reg AluOpreg : UInt, clock @[ID_EX_Reg.scala 94:31]
    AluOpreg <= UInt<3>("h00") @[ID_EX_Reg.scala 94:31]
    reg OpAreg : UInt, clock @[ID_EX_Reg.scala 95:29]
    OpAreg <= UInt<2>("h00") @[ID_EX_Reg.scala 95:29]
    reg OpBreg : UInt, clock @[ID_EX_Reg.scala 96:29]
    OpBreg <= UInt<1>("h00") @[ID_EX_Reg.scala 96:29]
    reg NextPcreg : UInt, clock @[ID_EX_Reg.scala 97:32]
    NextPcreg <= UInt<2>("h00") @[ID_EX_Reg.scala 97:32]
    MemWritereg <= io.MemWrite_in @[ID_EX_Reg.scala 99:21]
    io.MemWrite_out <= MemWritereg @[ID_EX_Reg.scala 100:25]
    Branchreg <= io.Branch_in @[ID_EX_Reg.scala 101:19]
    io.Branch_out <= Branchreg @[ID_EX_Reg.scala 102:23]
    MemReadreg <= io.MemRead_in @[ID_EX_Reg.scala 103:20]
    io.MemRead_out <= MemReadreg @[ID_EX_Reg.scala 104:24]
    RegWritereg <= io.RegWrite_in @[ID_EX_Reg.scala 105:21]
    io.RegWrite_out <= RegWritereg @[ID_EX_Reg.scala 106:25]
    MemtoRegreg <= io.MemtoReg_in @[ID_EX_Reg.scala 107:21]
    io.MemtoReg_out <= MemtoRegreg @[ID_EX_Reg.scala 108:25]
    AluOpreg <= io.AluOp_in @[ID_EX_Reg.scala 109:18]
    io.AluOp_out <= AluOpreg @[ID_EX_Reg.scala 110:22]
    OpAreg <= io.OpA_in @[ID_EX_Reg.scala 111:16]
    io.OpA_out <= OpAreg @[ID_EX_Reg.scala 112:20]
    OpBreg <= io.OpB_in @[ID_EX_Reg.scala 113:16]
    io.OpB_out <= OpBreg @[ID_EX_Reg.scala 114:20]
    NextPcreg <= io.NextPc_in @[ID_EX_Reg.scala 115:19]
    io.NextPc_out <= NextPcreg @[ID_EX_Reg.scala 116:23]
    
