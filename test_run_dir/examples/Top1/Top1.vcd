$version Generated by VerilatedVcd $end
$date Tue Jan  7 01:25:30 2020
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 z clock $end
  $var wire 32 | io_Reg_Out [31:0] $end
  $var wire  1 { reset $end
  $scope module Top1 $end
   $var wire  3 , AluControl_io_aluOp [2:0] $end
   $var wire  3 J AluControl_io_funct3 [2:0] $end
   $var wire  1 K AluControl_io_funct7 $end
   $var wire  5 # AluControl_io_out [4:0] $end
   $var wire  5 # Alu_io_AluControl [4:0] $end
   $var wire  1 & Alu_io_Branch $end
   $var wire 32 $ Alu_io_in1 [31:0] $end
   $var wire 32 % Alu_io_in2 [31:0] $end
   $var wire 32 ' Alu_io_out [31:0] $end
   $var wire  3 , Control_io_AluOp [2:0] $end
   $var wire  1 ) Control_io_Branch $end
   $var wire  2 / Control_io_ExtSel [1:0] $end
   $var wire  1 * Control_io_MemRead $end
   $var wire  1 ( Control_io_MemWrite $end
   $var wire  1 * Control_io_MemtoReg $end
   $var wire  2 0 Control_io_NextPc [1:0] $end
   $var wire  2 - Control_io_OpA [1:0] $end
   $var wire  1 . Control_io_OpB $end
   $var wire  1 + Control_io_RegWrite $end
   $var wire  7 E Control_io_opcode [6:0] $end
   $var wire  1 z DataMemory_clock $end
   $var wire  8 : DataMemory_io_Addr [7:0] $end
   $var wire 32 6 DataMemory_io_Data [31:0] $end
   $var wire  1 * DataMemory_io_MemRead $end
   $var wire  1 ( DataMemory_io_MemWrite $end
   $var wire 32 ; DataMemory_io_out [31:0] $end
   $var wire  1 z IF_ID_clock $end
   $var wire 32 7 IF_ID_io_inst_in [31:0] $end
   $var wire 32 F IF_ID_io_inst_out [31:0] $end
   $var wire 10 T IF_ID_io_pc4_in [9:0] $end
   $var wire 10 U IF_ID_io_pc4_out [9:0] $end
   $var wire 10 R IF_ID_io_pc_in [9:0] $end
   $var wire 10 S IF_ID_io_pc_out [9:0] $end
   $var wire 32 3 ImmediateGeneration_io_i_imm [31:0] $end
   $var wire 32 F ImmediateGeneration_io_instruction [31:0] $end
   $var wire 32 G ImmediateGeneration_io_pc [31:0] $end
   $var wire 32 H ImmediateGeneration_io_s_imm [31:0] $end
   $var wire 32 1 ImmediateGeneration_io_sb_imm [31:0] $end
   $var wire 32 I ImmediateGeneration_io_u_imm [31:0] $end
   $var wire 32 2 ImmediateGeneration_io_uj_imm [31:0] $end
   $var wire 32 5 Jalr_io_in1 [31:0] $end
   $var wire 32 3 Jalr_io_in2 [31:0] $end
   $var wire 32 9 Jalr_io_out [31:0] $end
   $var wire  1 z Memory_clock $end
   $var wire 32 7 Memory_io_rdData [31:0] $end
   $var wire 10 O Memory_io_wrAddr [9:0] $end
   $var wire  1 z Pc_clock $end
   $var wire 32 8 Pc_io_input [31:0] $end
   $var wire 32 Q Pc_io_pc [31:0] $end
   $var wire 32 P Pc_io_pc4 [31:0] $end
   $var wire  1 z Register_clock $end
   $var wire  1 + Register_io_RegWrite $end
   $var wire 32 4 Register_io_WriteData [31:0] $end
   $var wire  5 N Register_io_rd [4:0] $end
   $var wire 32 5 Register_io_rs1 [31:0] $end
   $var wire  5 L Register_io_rs1_s [4:0] $end
   $var wire 32 6 Register_io_rs2 [31:0] $end
   $var wire  5 M Register_io_rs2_s [4:0] $end
   $var wire  1 z clock $end
   $var wire 32 | io_Reg_Out [31:0] $end
   $var wire  1 { reset $end
   $scope module Alu $end
    $var wire  5 # io_AluControl [4:0] $end
    $var wire  1 & io_Branch $end
    $var wire 32 $ io_in1 [31:0] $end
    $var wire 32 % io_in2 [31:0] $end
    $var wire 32 ' io_out [31:0] $end
   $upscope $end
   $scope module AluControl $end
    $var wire  3 , io_aluOp [2:0] $end
    $var wire  3 J io_funct3 [2:0] $end
    $var wire  1 K io_funct7 $end
    $var wire  5 # io_out [4:0] $end
   $upscope $end
   $scope module Control $end
    $var wire  1 > c1_io_Branch $end
    $var wire  1 ? c1_io_I $end
    $var wire  1 @ c1_io_Jal $end
    $var wire  1 A c1_io_Jalr $end
    $var wire  1 < c1_io_Load $end
    $var wire  1 B c1_io_Lui $end
    $var wire  1 V c1_io_R $end
    $var wire  1 = c1_io_Store $end
    $var wire  7 E c1_io_opcode [6:0] $end
    $var wire  3 , c2_io_AluOp [2:0] $end
    $var wire  1 ) c2_io_Branch $end
    $var wire  1 > c2_io_Branch1 $end
    $var wire  2 / c2_io_ExtSel [1:0] $end
    $var wire  1 ? c2_io_I $end
    $var wire  1 @ c2_io_Jal $end
    $var wire  1 A c2_io_Jalr $end
    $var wire  1 < c2_io_Load $end
    $var wire  1 B c2_io_Lui $end
    $var wire  1 * c2_io_MemRead $end
    $var wire  1 ( c2_io_MemWrite $end
    $var wire  1 * c2_io_MemtoReg $end
    $var wire  2 0 c2_io_NextPc [1:0] $end
    $var wire  2 - c2_io_OpA [1:0] $end
    $var wire  1 . c2_io_OpB $end
    $var wire  1 V c2_io_R $end
    $var wire  1 + c2_io_RegWrite $end
    $var wire  1 = c2_io_Store $end
    $var wire  3 , io_AluOp [2:0] $end
    $var wire  1 ) io_Branch $end
    $var wire  2 / io_ExtSel [1:0] $end
    $var wire  1 * io_MemRead $end
    $var wire  1 ( io_MemWrite $end
    $var wire  1 * io_MemtoReg $end
    $var wire  2 0 io_NextPc [1:0] $end
    $var wire  2 - io_OpA [1:0] $end
    $var wire  1 . io_OpB $end
    $var wire  1 + io_RegWrite $end
    $var wire  7 E io_opcode [6:0] $end
    $scope module c1 $end
     $var wire  1 > io_Branch $end
     $var wire  1 ? io_I $end
     $var wire  1 @ io_Jal $end
     $var wire  1 A io_Jalr $end
     $var wire  1 < io_Load $end
     $var wire  1 B io_Lui $end
     $var wire  1 V io_R $end
     $var wire  1 = io_Store $end
     $var wire  7 E io_opcode [6:0] $end
    $upscope $end
    $scope module c2 $end
     $var wire  3 , io_AluOp [2:0] $end
     $var wire  1 ) io_Branch $end
     $var wire  1 > io_Branch1 $end
     $var wire  2 / io_ExtSel [1:0] $end
     $var wire  1 ? io_I $end
     $var wire  1 @ io_Jal $end
     $var wire  1 A io_Jalr $end
     $var wire  1 < io_Load $end
     $var wire  1 B io_Lui $end
     $var wire  1 * io_MemRead $end
     $var wire  1 ( io_MemWrite $end
     $var wire  1 * io_MemtoReg $end
     $var wire  2 0 io_NextPc [1:0] $end
     $var wire  2 - io_OpA [1:0] $end
     $var wire  1 . io_OpB $end
     $var wire  1 V io_R $end
     $var wire  1 + io_RegWrite $end
     $var wire  1 = io_Store $end
    $upscope $end
   $upscope $end
   $scope module DataMemory $end
    $var wire  1 z clock $end
    $var wire  8 : io_Addr [7:0] $end
    $var wire 32 6 io_Data [31:0] $end
    $var wire  1 * io_MemRead $end
    $var wire  1 ( io_MemWrite $end
    $var wire 32 ; io_out [31:0] $end
    $var wire 10 D mem__T_19_addr [9:0] $end
    $var wire 32 6 mem__T_19_data [31:0] $end
    $var wire  1 ( mem__T_19_en $end
    $var wire  1 } mem__T_19_mask $end
    $var wire 10 D mem__T_22_addr [9:0] $end
    $var wire 32 ; mem__T_22_data [31:0] $end
   $upscope $end
   $scope module IF_ID $end
    $var wire  1 z clock $end
    $var wire 32 F instreg [31:0] $end
    $var wire 32 7 io_inst_in [31:0] $end
    $var wire 32 F io_inst_out [31:0] $end
    $var wire 10 T io_pc4_in [9:0] $end
    $var wire 10 U io_pc4_out [9:0] $end
    $var wire 10 R io_pc_in [9:0] $end
    $var wire 10 S io_pc_out [9:0] $end
    $var wire 10 U pc4reg [9:0] $end
    $var wire 10 S pcreg [9:0] $end
   $upscope $end
   $scope module ImmediateGeneration $end
    $var wire 32 3 io_i_imm [31:0] $end
    $var wire 32 F io_instruction [31:0] $end
    $var wire 32 G io_pc [31:0] $end
    $var wire 32 H io_s_imm [31:0] $end
    $var wire 32 1 io_sb_imm [31:0] $end
    $var wire 32 I io_u_imm [31:0] $end
    $var wire 32 2 io_uj_imm [31:0] $end
    $var wire 12 W s_imm13 [11:0] $end
    $var wire 13 X sb_imm13 [12:0] $end
    $var wire 21 Y uj_imm21 [20:0] $end
   $upscope $end
   $scope module Jalr $end
    $var wire 32 C a [31:0] $end
    $var wire 32 5 io_in1 [31:0] $end
    $var wire 32 3 io_in2 [31:0] $end
    $var wire 32 9 io_out [31:0] $end
   $upscope $end
   $scope module Memory $end
    $var wire  1 z clock $end
    $var wire 32 7 io_rdData [31:0] $end
    $var wire 10 O io_wrAddr [9:0] $end
    $var wire 10 O mem__T_11_addr [9:0] $end
    $var wire 32 7 mem__T_11_data [31:0] $end
    $scope module BindsTo_0_Memory_Inst $end
     $var wire  1 z clock $end
     $var wire 32 7 io_rdData [31:0] $end
     $var wire 10 O io_wrAddr [9:0] $end
    $upscope $end
   $upscope $end
   $scope module Pc $end
    $var wire  1 z clock $end
    $var wire 32 8 io_input [31:0] $end
    $var wire 32 Q io_pc [31:0] $end
    $var wire 32 P io_pc4 [31:0] $end
    $var wire 32 Q reg$ [31:0] $end
   $upscope $end
   $scope module Register $end
    $var wire  1 z clock $end
    $var wire  1 + io_RegWrite $end
    $var wire 32 4 io_WriteData [31:0] $end
    $var wire  5 N io_rd [4:0] $end
    $var wire 32 5 io_rs1 [31:0] $end
    $var wire  5 L io_rs1_s [4:0] $end
    $var wire 32 6 io_rs2 [31:0] $end
    $var wire  5 M io_rs2_s [4:0] $end
    $var wire 32 Z register_0 [31:0] $end
    $var wire 32 [ register_1 [31:0] $end
    $var wire 32 d register_10 [31:0] $end
    $var wire 32 e register_11 [31:0] $end
    $var wire 32 f register_12 [31:0] $end
    $var wire 32 g register_13 [31:0] $end
    $var wire 32 h register_14 [31:0] $end
    $var wire 32 i register_15 [31:0] $end
    $var wire 32 j register_16 [31:0] $end
    $var wire 32 k register_17 [31:0] $end
    $var wire 32 l register_18 [31:0] $end
    $var wire 32 m register_19 [31:0] $end
    $var wire 32 \ register_2 [31:0] $end
    $var wire 32 n register_20 [31:0] $end
    $var wire 32 o register_21 [31:0] $end
    $var wire 32 p register_22 [31:0] $end
    $var wire 32 q register_23 [31:0] $end
    $var wire 32 r register_24 [31:0] $end
    $var wire 32 s register_25 [31:0] $end
    $var wire 32 t register_26 [31:0] $end
    $var wire 32 u register_27 [31:0] $end
    $var wire 32 v register_28 [31:0] $end
    $var wire 32 w register_29 [31:0] $end
    $var wire 32 ] register_3 [31:0] $end
    $var wire 32 x register_30 [31:0] $end
    $var wire 32 y register_31 [31:0] $end
    $var wire 32 ^ register_4 [31:0] $end
    $var wire 32 _ register_5 [31:0] $end
    $var wire 32 ` register_6 [31:0] $end
    $var wire 32 a register_7 [31:0] $end
    $var wire 32 b register_8 [31:0] $end
    $var wire 32 c register_9 [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
0&
b00000000000000000000000000000000 '
0(
0)
0*
0+
b111 ,
b00 -
0.
b00 /
b00 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000010100000000000100010011 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000 :
b00000000000000000000000000000000 ;
0<
0=
0>
0?
0@
0A
0B
b00000000000000000000000000000000 C
b0000000000 D
b0000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b000 J
0K
b00000 L
b00000 M
b00000 N
b0000000000 O
b00000000000000000000000000000100 P
b00000000000000000000000000000000 Q
b0000000000 R
b0000000000 S
b0000000100 T
b0000000000 U
0V
b000000000000 W
b0000000000000 X
b000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b00000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000000 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
b00000000000000000000000000000000 h
b00000000000000000000000000000000 i
b00000000000000000000000000000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
b00000000000000000000000000000000 o
b00000000000000000000000000000000 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
0z
1{
b00000000000000000000000000000000 |
1}
#1
b00000000000000000000000000000101 %
b00000000000000000000000000000101 '
1+
b001 ,
1.
b00000000000000000000000000000010 1
b00000000000000000000100000000100 2
b00000000000000000000000000000101 3
b00000000000000000000000000000101 4
b00000000000000000000000000000100 8
b00000000000000000000000000000100 9
b00000001 :
1?
b00000000000000000000000000000101 C
b0000000001 D
b0010011 E
b00000000010100000000000100010011 F
b00000000000000000000000000000010 H
b00000000010100000000000000000000 I
b00101 M
b00010 N
b0000000100 U
b000000000010 W
b0000000000010 X
b000000000100000000100 Y
1z
b00000000000000000000000000000101 |
#2
0z
#3
b00000000010100000000000110010011 7
b0000000001 O
b00000000000000000000000000001000 P
b00000000000000000000000000000100 Q
b0000000100 R
b0000001000 T
b00000000000000000000000000000101 \
1z
#4
0z
#5
b00000000000000000000100000000110 1
b00000000000000000000100000001000 2
b00000000000000000000000000001000 8
b00000000010100000000000110010011 F
b00000000000000000000000000000100 G
b00000000000000000000000000000011 H
b00011 N
b0000000100 S
b0000001000 U
b000000000011 W
b0100000000010 X
1z
#6
0z
#7
b00000001010000000000000011101111 7
b0000000010 O
b00000000000000000000000000001100 P
b00000000000000000000000000001000 Q
b0000001000 R
b0000001100 T
b00000000000000000000000000000101 ]
1z
#8
0z
#9
b11111 #
b00000000000000000000000000001100 $
b00000000000000000000000000000000 %
b00000000000000000000000000001100 '
b011 ,
b10 -
0.
b10 0
b00000000000000000000100000001000 1
b00000000000000000000000000011100 2
b00000000000000000000000000010100 3
b00000000000000000000000000001100 4
b00000000000000000000000000011100 8
b00000000000000000000000000010100 9
b00000011 :
0?
1@
b00000000000000000000000000010100 C
b0000000011 D
b1101111 E
b00000001010000000000000011101111 F
b00000000000000000000000000001000 G
b00000000000000000000000000000001 H
b00000001010000000000000000000000 I
b10100 M
b00001 N
b0000001000 S
b0000001100 U
b000000000001 W
b0100000000000 X
b000000000000000010100 Y
1z
b00000000000000000000000000001100 |
#10
0z
0{
#11
b00000000001100010000001000110011 7
b0000000111 O
b00000000000000000000000000100000 P
b00000000000000000000000000011100 Q
b0000011100 R
b0000100000 T
b00000000000000000000000000001100 [
1z
#12
0z
#13
b00000 #
b00000000000000000000000000000101 $
b00000000000000000000000000000101 %
b00000000000000000000000000001010 '
b000 ,
b00 -
b00 0
b00000000000000000000000000100000 1
b00000000000000010000100000011110 2
b00000000000000000000000000000011 3
b00000000000000000000000000001010 4
b00000000000000000000000000000101 5
b00000000000000000000000000000101 6
b00000000000000000000000000100000 8
b00000000000000000000000000001000 9
b00000010 :
0@
b00000000000000000000000000001000 C
b0000000010 D
b0110011 E
b00000000001100010000001000110011 F
b00000000000000000000000000011100 G
b00000000000000000000000000000100 H
b00000000001100010000000000000000 I
b00010 L
b00011 M
b00100 N
b0000011100 S
b0000100000 U
1V
b000000000100 W
b0000000000100 X
b000010000100000000010 Y
1z
b00000000000000000000000000001010 |
#14
0z
#15
b00000000000000001000000001100111 7
b0000001000 O
b00000000000000000000000000100100 P
b00000000000000000000000000100000 Q
b0000100000 R
b0000100100 T
b00000000000000000000000000001010 ^
1z
#16
0z
#17
b11111 #
b00000000000000000000000000100100 $
b00000000000000000000000000000000 %
b00000000000000000000000000100100 '
b011 ,
b10 -
b11 0
b00000000000000001000000000100000 2
b00000000000000000000000000000000 3
b00000000000000000000000000100100 4
b00000000000000000000000000001100 5
b00000000000000000000000000000000 6
b00000000000000000000000000001100 8
b00000000000000000000000000001100 9
b00001001 :
1A
b00000000000000000000000000001100 C
b0000001001 D
b1100111 E
b00000000000000001000000001100111 F
b00000000000000000000000000100000 G
b00000000000000000000000000000000 H
b00000000000000001000000000000000 I
b00001 L
b00000 M
b00000 N
b0000100000 S
b0000100100 U
0V
b000000000000 W
b0000000000000 X
b000001000000000000000 Y
1z
b00000000000000000000000000100100 |
#18
0z
#19
b00000000000100100000001010010011 7
b0000000011 O
b00000000000000000000000000010000 P
b00000000000000000000000000001100 Q
b0000001100 R
b0000010000 T
1z
#20
0z
#21
b00000 #
b00000000000000000000000000001010 $
b00000000000000000000000000000001 %
b00000000000000000000000000001011 '
b001 ,
b00 -
1.
b00 0
b00000000000000000000100000010000 1
b00000000000000100000100000001100 2
b00000000000000000000000000000001 3
b00000000000000000000000000001011 4
b00000000000000000000000000001010 5
b00000000000000000000000000001100 6
b00000000000000000000000000010000 8
b00000000000000000000000000001010 9
b00000010 :
1?
0A
b00000000000000000000000000001011 C
b0000000010 D
b0010011 E
b00000000000100100000001010010011 F
b00000000000000000000000000001100 G
b00000000000000000000000000000101 H
b00000000000100100000000000000000 I
b00100 L
b00001 M
b00101 N
b0000001100 S
b0000010000 U
b000000000101 W
b0100000000100 X
b000100000100000000000 Y
1z
b00000000000000000000000000001011 |
